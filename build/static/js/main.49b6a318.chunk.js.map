{"version":3,"sources":["componets/Card/card.componet.jsx","componets/card-list/card-list.componet.jsx","componets/searchBox/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","Cardlist","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filtermosters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAW,iBAAhB,UACA,qBAAKC,IAAM,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACxB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHTC,G,MAAW,SAACR,GAAD,OACrB,qBAAKC,UAAW,YAAhB,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,WCHhBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACtB,uBAAOZ,UAAW,SAClBa,KAAM,SAASF,YAAaA,EAC5BG,SAAUF,MC4CCG,E,kDA5Cb,aAAc,IAAD,8BACX,gBASFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SARrC,EAAKC,MAAO,CACVb,SAAU,GACVU,YAAa,IALJ,E,qDAab,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,oBAK1C,WAAQ,MAE2BC,KAAKN,MAA9Bb,EAFF,EAEEA,SAAUU,EAFZ,EAEYA,YACZU,EAAgBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC3CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAIhD,OACA,sBAAK9B,UAAY,MAAjB,UACA,iDACC,cAAC,EAAD,CACAW,YAAc,iBACdC,aAAee,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAWoB,W,GAtCTI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.49b6a318.chunk.js","sourcesContent":["import React from 'react';\nimport './card.style.css';\n\nexport const Card = props =>(\n    <div className ='card-container'>\n    <img alt = \"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n    <h2>{props.monster.name}</h2>\n    <p>{props.monster.email}</p>\n    </div>\n)","import React from 'react';\nimport { Card } from '../Card/card.componet';\nimport './card-list.styles.css'\n\nexport const Cardlist = (props) => (\n   <div className ='card-list'>{\n        props.monsters.map(monster =>(\n           <Card key={monster.id} monster ={monster}/>\n         ))}\n    </div>\n);\n\n\n","import React from 'react';\n import './search-box.style.css';\n\n\nexport  const SearchBox = ({placeholder,handleChange}) =>(\n    <input className ='search'\n    type ='search' placeholder={placeholder}\n    onChange={handleChange}\n        \n    />\n )","import './App.css';\nimport { Component } from 'react';\nimport {Cardlist} from './componets/card-list/card-list.componet';\nimport {SearchBox} from './componets/searchBox/search-box.component';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n\n    this.state ={\n      monsters: [],\n      searchField: ''\n    };\n\n  \n  }\n  handleChange = (e) =>{\n    this.setState({searchField: e.target.value});\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response =>response.json())\n    .then(users => this.setState({monsters: users}));\n  \n\n  }\n\n  render(){\n    //destructuing pull property \n    const { monsters, searchField} = this.state;\n    const filtermosters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    \n      return(\n      <div className = 'App'>\n      <h1>Monster Rolodex</h1>\n       <SearchBox\n       placeholder = 'search monster'\n       handleChange ={this.handleChange}\n       /> \n      <Cardlist monsters ={filtermosters}>\n      </Cardlist>\n      </div>\n    )\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}